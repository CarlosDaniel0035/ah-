

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Jun 13 18:50:42 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.31
    22                           ; Generated 13/10/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  0088                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  0105                     	;# 
   276  0107                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  0185                     	;# 
   285  0187                     	;# 
   286  0188                     	;# 
   287  0189                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0000                     	;# 
   291  0001                     	;# 
   292  0002                     	;# 
   293  0003                     	;# 
   294  0004                     	;# 
   295  0005                     	;# 
   296  0006                     	;# 
   297  0007                     	;# 
   298  0008                     	;# 
   299  0009                     	;# 
   300  000A                     	;# 
   301  000B                     	;# 
   302  000C                     	;# 
   303  000D                     	;# 
   304  000E                     	;# 
   305  000E                     	;# 
   306  000F                     	;# 
   307  0010                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0013                     	;# 
   311  0014                     	;# 
   312  0015                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001D                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  0081                     	;# 
   326  0085                     	;# 
   327  0086                     	;# 
   328  0087                     	;# 
   329  0088                     	;# 
   330  0089                     	;# 
   331  008C                     	;# 
   332  008D                     	;# 
   333  008E                     	;# 
   334  008F                     	;# 
   335  0090                     	;# 
   336  0091                     	;# 
   337  0092                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0094                     	;# 
   342  0095                     	;# 
   343  0096                     	;# 
   344  0097                     	;# 
   345  0098                     	;# 
   346  0099                     	;# 
   347  009A                     	;# 
   348  009B                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  0105                     	;# 
   354  0107                     	;# 
   355  0108                     	;# 
   356  0109                     	;# 
   357  010C                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  0185                     	;# 
   363  0187                     	;# 
   364  0188                     	;# 
   365  0189                     	;# 
   366  018C                     	;# 
   367  018D                     	;# 
   368  0000                     	;# 
   369  0001                     	;# 
   370  0002                     	;# 
   371  0003                     	;# 
   372  0004                     	;# 
   373  0005                     	;# 
   374  0006                     	;# 
   375  0007                     	;# 
   376  0008                     	;# 
   377  0009                     	;# 
   378  000A                     	;# 
   379  000B                     	;# 
   380  000C                     	;# 
   381  000D                     	;# 
   382  000E                     	;# 
   383  000E                     	;# 
   384  000F                     	;# 
   385  0010                     	;# 
   386  0011                     	;# 
   387  0012                     	;# 
   388  0013                     	;# 
   389  0014                     	;# 
   390  0015                     	;# 
   391  0015                     	;# 
   392  0016                     	;# 
   393  0017                     	;# 
   394  0018                     	;# 
   395  0019                     	;# 
   396  001A                     	;# 
   397  001B                     	;# 
   398  001B                     	;# 
   399  001C                     	;# 
   400  001D                     	;# 
   401  001E                     	;# 
   402  001F                     	;# 
   403  0081                     	;# 
   404  0085                     	;# 
   405  0086                     	;# 
   406  0087                     	;# 
   407  0088                     	;# 
   408  0089                     	;# 
   409  008C                     	;# 
   410  008D                     	;# 
   411  008E                     	;# 
   412  008F                     	;# 
   413  0090                     	;# 
   414  0091                     	;# 
   415  0092                     	;# 
   416  0093                     	;# 
   417  0093                     	;# 
   418  0093                     	;# 
   419  0094                     	;# 
   420  0095                     	;# 
   421  0096                     	;# 
   422  0097                     	;# 
   423  0098                     	;# 
   424  0099                     	;# 
   425  009A                     	;# 
   426  009B                     	;# 
   427  009C                     	;# 
   428  009D                     	;# 
   429  009E                     	;# 
   430  009F                     	;# 
   431  0105                     	;# 
   432  0107                     	;# 
   433  0108                     	;# 
   434  0109                     	;# 
   435  010C                     	;# 
   436  010C                     	;# 
   437  010D                     	;# 
   438  010E                     	;# 
   439  010F                     	;# 
   440  0185                     	;# 
   441  0187                     	;# 
   442  0188                     	;# 
   443  0189                     	;# 
   444  018C                     	;# 
   445  018D                     	;# 
   446                           
   447                           	psect	idataCOMMON
   448  067E                     __pidataCOMMON:
   449                           
   450                           ;initializer for _numpaassos
   451  067E  3409               	retlw	9
   452                           
   453                           ;initializer for _qtdpassos
   454  067F  3404               	retlw	4
   455                           
   456                           ;initializer for _numpassos
   457  0680  3404               	retlw	4
   458                           
   459                           	psect	idataBANK0
   460  068E                     __pidataBANK0:
   461                           
   462                           ;initializer for _passoos
   463  068E  3440               	retlw	64
   464  068F  34C0               	retlw	192
   465  0690  3480               	retlw	128
   466  0691  3490               	retlw	144
   467  0692  3410               	retlw	16
   468  0693  3430               	retlw	48
   469  0694  3420               	retlw	32
   470  0695  3460               	retlw	96
   471  0696  3400               	retlw	0
   472                           
   473                           ;initializer for _passo
   474  0697  3420               	retlw	32
   475  0698  3410               	retlw	16
   476  0699  3480               	retlw	128
   477  069A  3440               	retlw	64
   478                           
   479                           ;initializer for _passos
   480  069B  3440               	retlw	64
   481  069C  3480               	retlw	128
   482  069D  3410               	retlw	16
   483  069E  3420               	retlw	32
   484  0008                     _LCDbits	set	8
   485  0008                     _PORTD	set	8
   486  0008                     _PORTDbits	set	8
   487  0086                     _TRISBbits	set	134
   488  0088                     _TRISDbits	set	136
   489                           
   490                           	psect	cinit
   491  07D6                     start_initialization:	
   492                           ; #config settings
   493                           
   494  07D6                     __initialization:
   495                           
   496                           ; Initialize objects allocated to BANK0
   497  07D6  1383               	bcf	3,7	;select IRP bank0
   498  07D7  3031               	movlw	low (__pdataBANK0+17)
   499  07D8  00FD               	movwf	btemp+-1
   500  07D9  3006               	movlw	high __pidataBANK0
   501  07DA  00FE               	movwf	btemp
   502  07DB  308E               	movlw	low __pidataBANK0
   503  07DC  00FF               	movwf	btemp+1
   504  07DD  3020               	movlw	low __pdataBANK0
   505  07DE  0084               	movwf	4
   506  07DF  120A  118A  26A3  120A  118A  	fcall	init_ram0
   507                           
   508                           ; Initialize objects allocated to COMMON
   509  07E4  120A  118A  267E  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   510  07E9  00FA               	movwf	__pdataCOMMON& (0+127)
   511  07EA  120A  118A  267F  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   512  07EF  00FB               	movwf	(__pdataCOMMON+1)& (0+127)
   513  07F0  120A  118A  2680  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   514  07F5  00FC               	movwf	(__pdataCOMMON+2)& (0+127)
   515                           
   516                           ; Clear objects allocated to BANK0
   517  07F6  01B1               	clrf	__pbssBANK0& (0+127)
   518  07F7  01B2               	clrf	(__pbssBANK0+1)& (0+127)
   519  07F8  01B3               	clrf	(__pbssBANK0+2)& (0+127)
   520  07F9  01B4               	clrf	(__pbssBANK0+3)& (0+127)
   521  07FA  01B5               	clrf	(__pbssBANK0+4)& (0+127)
   522  07FB  01B6               	clrf	(__pbssBANK0+5)& (0+127)
   523  07FC                     end_of_initialization:	
   524                           ;End of C runtime variable initialization code
   525                           
   526  07FC                     __end_of__initialization:
   527  07FC  0183               	clrf	3
   528  07FD  120A  118A  2F51   	ljmp	_main	;jump to C main() function
   529                           
   530                           	psect	dataCOMMON
   531  007A                     __pdataCOMMON:
   532  007A                     _numpaassos:
   533  007A                     	ds	1
   534  007B                     _qtdpassos:
   535  007B                     	ds	1
   536  007C                     _numpassos:
   537  007C                     	ds	1
   538                           
   539                           	psect	bssBANK0
   540  0031                     __pbssBANK0:
   541  0031                     _passoatuaal:
   542  0031                     	ds	2
   543  0033                     _passoagora:
   544  0033                     	ds	2
   545  0035                     _passoatual:
   546  0035                     	ds	2
   547                           
   548                           	psect	dataBANK0
   549  0020                     __pdataBANK0:
   550  0020                     _passoos:
   551  0020                     	ds	9
   552  0029                     _passo:
   553  0029                     	ds	4
   554  002D                     _passos:
   555  002D                     	ds	4
   556                           
   557                           	psect	inittext
   558  069F                     init_fetch0:	
   559                           ;	Called with low address in FSR and high address in W
   560                           
   561  069F  087E               	movf	btemp,w
   562  06A0  008A               	movwf	10
   563  06A1  087F               	movf	btemp+1,w
   564  06A2  0082               	movwf	2
   565  06A3                     init_ram0:	
   566                           ;Called with:
   567                           ;	high address of idata address in btemp 
   568                           ;	low address of idata address in btemp+1 
   569                           ;	low address of data in FSR
   570                           ;	high address + 1 of data in btemp-1
   571                           
   572  06A3  120A  118A  269F  120A  118A  	fcall	init_fetch0
   573  06A8  0080               	movwf	0
   574  06A9  0A84               	incf	4,f
   575  06AA  0804               	movf	4,w
   576  06AB  067D               	xorwf	btemp+-1,w
   577  06AC  1903               	btfsc	3,2
   578  06AD  3400               	retlw	0
   579  06AE  0AFF               	incf	btemp+1,f
   580  06AF  1903               	btfsc	3,2
   581  06B0  0AFE               	incf	btemp,f
   582  06B1  2EA3               	goto	init_ram0
   583                           
   584                           	psect	cstackCOMMON
   585  0070                     __pcstackCOMMON:
   586  0070                     ?_motorpasso_init:
   587  0070                     ??_motorpasso_init:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?_delay:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ?_main:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     delay@t:	
   597                           ; 1 bytes @ 0x0
   598                           
   599                           
   600                           ; 2 bytes @ 0x0
   601  0070                     	ds	2
   602  0072                     ??_delay:
   603                           
   604                           ; 1 bytes @ 0x2
   605  0072                     	ds	1
   606  0073                     ?_motorpasso:
   607  0073                     ?_motorantpasso:	
   608                           ; 1 bytes @ 0x3
   609                           
   610  0073                     ?_motormeiopasso:	
   611                           ; 1 bytes @ 0x3
   612                           
   613  0073                     motorpasso@numpassos:	
   614                           ; 1 bytes @ 0x3
   615                           
   616  0073                     motorantpasso@qtdpassos:	
   617                           ; 2 bytes @ 0x3
   618                           
   619  0073                     motormeiopasso@numpaassos:	
   620                           ; 2 bytes @ 0x3
   621                           
   622                           
   623                           ; 2 bytes @ 0x3
   624  0073                     	ds	2
   625  0075                     motorpasso@t:
   626  0075                     motorantpasso@t:	
   627                           ; 2 bytes @ 0x5
   628                           
   629  0075                     motormeiopasso@t:	
   630                           ; 2 bytes @ 0x5
   631                           
   632                           
   633                           ; 2 bytes @ 0x5
   634  0075                     	ds	2
   635  0077                     ??_motorpasso:
   636  0077                     ??_motorantpasso:	
   637                           ; 1 bytes @ 0x7
   638                           
   639  0077                     ??_motormeiopasso:	
   640                           ; 1 bytes @ 0x7
   641                           
   642                           
   643                           ; 1 bytes @ 0x7
   644  0077                     	ds	1
   645  0078                     ??_main:
   646  0078                     main@estado:	
   647                           ; 1 bytes @ 0x8
   648                           
   649                           
   650                           ; 2 bytes @ 0x8
   651  0078                     	ds	2
   652                           
   653                           	psect	maintext
   654  0751                     __pmaintext:	
   655 ;;
   656 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   657 ;;
   658 ;; *************** function _main *****************
   659 ;; Defined at:
   660 ;;		line 12 in file "main.c"
   661 ;; Parameters:    Size  Location     Type
   662 ;;		None
   663 ;; Auto vars:     Size  Location     Type
   664 ;;  estado          2    8[COMMON] int 
   665 ;; Return value:  Size  Location     Type
   666 ;;                  1    wreg      void 
   667 ;; Registers used:
   668 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   669 ;; Tracked objects:
   670 ;;		On entry : B00/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   674 ;;      Params:         0       0       0       0       0
   675 ;;      Locals:         2       0       0       0       0
   676 ;;      Temps:          0       0       0       0       0
   677 ;;      Totals:         2       0       0       0       0
   678 ;;Total ram usage:        2 bytes
   679 ;; Hardware stack levels required when called:    2
   680 ;; This function calls:
   681 ;;		_motorantpasso
   682 ;;		_motormeiopasso
   683 ;;		_motorpasso
   684 ;;		_motorpasso_init
   685 ;; This function is called by:
   686 ;;		Startup code after reset
   687 ;; This function uses a non-reentrant model
   688 ;;
   689                           
   690                           
   691                           ;psect for function _main
   692  0751                     _main:
   693  0751                     l1003:	
   694                           ;incstack = 0
   695                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   696                           
   697                           
   698                           ;main.c: 15:     int estado = 0;
   699  0751  01F8               	clrf	main@estado
   700  0752  01F9               	clrf	main@estado+1
   701  0753                     l1005:
   702                           
   703                           ;main.c: 16:     motorpasso_init();
   704  0753  120A  118A  2681  120A  118A  	fcall	_motorpasso_init
   705  0758  2FBA               	goto	l1037
   706  0759                     l1007:
   707                           
   708                           ;main.c: 23:                 estado = 1;
   709  0759  3001               	movlw	1
   710  075A  00F8               	movwf	main@estado
   711  075B  3000               	movlw	0
   712  075C  00F9               	movwf	main@estado+1
   713                           
   714                           ;main.c: 24:                 break;
   715  075D  2FBA               	goto	l1037
   716  075E                     l27:	
   717                           ;main.c: 25:             case 1:
   718                           
   719                           
   720                           ;main.c: 26:                 if (PORTDbits.RD0 == 1)
   721  075E  1283               	bcf	3,5	;RP0=0, select bank0
   722  075F  1303               	bcf	3,6	;RP1=0, select bank0
   723  0760  1C08               	btfss	8,0	;volatile
   724  0761  2F63               	goto	u341
   725  0762  2F64               	goto	u340
   726  0763                     u341:
   727  0763  2F68               	goto	l1011
   728  0764                     u340:
   729  0764                     l1009:
   730                           
   731                           ;main.c: 27:                     estado = 2;
   732  0764  3002               	movlw	2
   733  0765  00F8               	movwf	main@estado
   734  0766  3000               	movlw	0
   735  0767  00F9               	movwf	main@estado+1
   736  0768                     l1011:
   737                           
   738                           ;main.c: 28:                 if (PORTDbits.RD1 == 1)
   739  0768  1C88               	btfss	8,1	;volatile
   740  0769  2F6B               	goto	u351
   741  076A  2F6C               	goto	u350
   742  076B                     u351:
   743  076B  2F70               	goto	l1015
   744  076C                     u350:
   745  076C                     l1013:
   746                           
   747                           ;main.c: 29:                     estado = 3;
   748  076C  3003               	movlw	3
   749  076D  00F8               	movwf	main@estado
   750  076E  3000               	movlw	0
   751  076F  00F9               	movwf	main@estado+1
   752  0770                     l1015:
   753                           
   754                           ;main.c: 30:                 if (PORTDbits.RD2 == 1)
   755  0770  1D08               	btfss	8,2	;volatile
   756  0771  2F73               	goto	u361
   757  0772  2F74               	goto	u360
   758  0773                     u361:
   759  0773  2FBA               	goto	l24
   760  0774                     u360:
   761  0774                     l1017:
   762                           
   763                           ;main.c: 31:                     estado = 5;
   764  0774  3005               	movlw	5
   765  0775  00F8               	movwf	main@estado
   766  0776  3000               	movlw	0
   767  0777  00F9               	movwf	main@estado+1
   768  0778  2FBA               	goto	l1037
   769  0779                     l1019:
   770                           
   771                           ;main.c: 35:                 motorpasso(48, 100);
   772  0779  3030               	movlw	48
   773  077A  00F3               	movwf	motorpasso@numpassos
   774  077B  3000               	movlw	0
   775  077C  00F4               	movwf	motorpasso@numpassos+1
   776  077D  3064               	movlw	100
   777  077E  00F5               	movwf	motorpasso@t
   778  077F  3000               	movlw	0
   779  0780  00F6               	movwf	motorpasso@t+1
   780  0781  120A  118A  2723  120A  118A  	fcall	_motorpasso
   781  0786                     l1021:
   782                           
   783                           ;main.c: 36:                 if (PORTDbits.RD1 ==1)
   784  0786  1283               	bcf	3,5	;RP0=0, select bank0
   785  0787  1303               	bcf	3,6	;RP1=0, select bank0
   786  0788  1C88               	btfss	8,1	;volatile
   787  0789  2F8B               	goto	u371
   788  078A  2F8C               	goto	u370
   789  078B                     u371:
   790  078B  2FBA               	goto	l24
   791  078C                     u370:
   792  078C                     l1023:
   793                           
   794                           ;main.c: 37:                     estado = 4;
   795  078C  3004               	movlw	4
   796  078D  00F8               	movwf	main@estado
   797  078E  3000               	movlw	0
   798  078F  00F9               	movwf	main@estado+1
   799  0790  2FBA               	goto	l1037
   800  0791                     l1025:
   801                           
   802                           ;main.c: 40:                 motorantpasso(48, 100);
   803  0791  3030               	movlw	48
   804  0792  00F3               	movwf	motorantpasso@qtdpassos
   805  0793  3000               	movlw	0
   806  0794  00F4               	movwf	motorantpasso@qtdpassos+1
   807  0795  3064               	movlw	100
   808  0796  00F5               	movwf	motorantpasso@t
   809  0797  3000               	movlw	0
   810  0798  00F6               	movwf	motorantpasso@t+1
   811  0799  120A  118A  26C7  120A  118A  	fcall	_motorantpasso
   812  079E                     l1027:
   813                           
   814                           ;main.c: 41:                 if (PORTDbits.RD1 == 1)
   815  079E  1283               	bcf	3,5	;RP0=0, select bank0
   816  079F  1303               	bcf	3,6	;RP1=0, select bank0
   817  07A0  1C88               	btfss	8,1	;volatile
   818  07A1  2FA3               	goto	u381
   819  07A2  2FA4               	goto	u380
   820  07A3                     u381:
   821  07A3  2FBA               	goto	l24
   822  07A4                     u380:
   823  07A4  2F8C               	goto	l1023
   824  07A5                     l35:	
   825                           ;main.c: 44:             case 4:
   826                           
   827                           
   828                           ;main.c: 45:                 if(PORTDbits.RD1 == 0)
   829  07A5  1283               	bcf	3,5	;RP0=0, select bank0
   830  07A6  1303               	bcf	3,6	;RP1=0, select bank0
   831  07A7  1888               	btfsc	8,1	;volatile
   832  07A8  2FAA               	goto	u391
   833  07A9  2FAB               	goto	u390
   834  07AA                     u391:
   835  07AA  2FBA               	goto	l24
   836  07AB                     u390:
   837  07AB  2F59               	goto	l1007
   838  07AC                     l1033:
   839                           
   840                           ;main.c: 49:                 motormeiopasso(30, 1000);
   841  07AC  301E               	movlw	30
   842  07AD  00F3               	movwf	motormeiopasso@numpaassos
   843  07AE  3000               	movlw	0
   844  07AF  00F4               	movwf	motormeiopasso@numpaassos+1
   845  07B0  30E8               	movlw	232
   846  07B1  00F5               	movwf	motormeiopasso@t
   847  07B2  3003               	movlw	3
   848  07B3  00F6               	movwf	motormeiopasso@t+1
   849  07B4  120A  118A  26F5  120A  118A  	fcall	_motormeiopasso
   850                           
   851                           ;main.c: 50:                 break;
   852  07B9  2FBA               	goto	l1037
   853  07BA                     l24:
   854  07BA                     l1037:
   855                           
   856                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   857                           ; Switch size 1, requested type "simple"
   858                           ; Number of cases is 1, Range of values is 0 to 0
   859                           ; switch strategies available:
   860                           ; Name         Instructions Cycles
   861                           ; simple_byte            4     3 (average)
   862                           ; direct_byte           11     8 (fixed)
   863                           ; jumptable            260     6 (fixed)
   864                           ;	Chosen strategy is simple_byte
   865  07BA  0879               	movf	main@estado+1,w
   866  07BB  3A00               	xorlw	0	; case 0
   867  07BC  1903               	skipnz
   868  07BD  2FBF               	goto	l1075
   869  07BE  2FBA               	goto	l1037
   870  07BF                     l1075:
   871                           
   872                           ; Switch size 1, requested type "simple"
   873                           ; Number of cases is 6, Range of values is 0 to 5
   874                           ; switch strategies available:
   875                           ; Name         Instructions Cycles
   876                           ; simple_byte           19    10 (average)
   877                           ; direct_byte           26     8 (fixed)
   878                           ; jumptable            260     6 (fixed)
   879                           ;	Chosen strategy is simple_byte
   880  07BF  0878               	movf	main@estado,w
   881  07C0  3A00               	xorlw	0	; case 0
   882  07C1  1903               	skipnz
   883  07C2  2F59               	goto	l1007
   884  07C3  3A01               	xorlw	1	; case 1
   885  07C4  1903               	skipnz
   886  07C5  2F5E               	goto	l27
   887  07C6  3A03               	xorlw	3	; case 2
   888  07C7  1903               	skipnz
   889  07C8  2F79               	goto	l1019
   890  07C9  3A01               	xorlw	1	; case 3
   891  07CA  1903               	skipnz
   892  07CB  2F91               	goto	l1025
   893  07CC  3A07               	xorlw	7	; case 4
   894  07CD  1903               	skipnz
   895  07CE  2FA5               	goto	l35
   896  07CF  3A01               	xorlw	1	; case 5
   897  07D0  1903               	skipnz
   898  07D1  2FAC               	goto	l1033
   899  07D2  2FBA               	goto	l1037
   900  07D3  120A  118A  2800   	ljmp	start
   901  07D6                     __end_of_main:
   902                           
   903                           	psect	text1
   904  0681                     __ptext1:	
   905 ;; *************** function _motorpasso_init *****************
   906 ;; Defined at:
   907 ;;		line 6 in file "motorpasso.c"
   908 ;; Parameters:    Size  Location     Type
   909 ;;		None
   910 ;; Auto vars:     Size  Location     Type
   911 ;;		None
   912 ;; Return value:  Size  Location     Type
   913 ;;                  1    wreg      void 
   914 ;; Registers used:
   915 ;;		None
   916 ;; Tracked objects:
   917 ;;		On entry : 0/0
   918 ;;		On exit  : 0/0
   919 ;;		Unchanged: 0/0
   920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   921 ;;      Params:         0       0       0       0       0
   922 ;;      Locals:         0       0       0       0       0
   923 ;;      Temps:          0       0       0       0       0
   924 ;;      Totals:         0       0       0       0       0
   925 ;;Total ram usage:        0 bytes
   926 ;; Hardware stack levels used:    1
   927 ;; This function calls:
   928 ;;		Nothing
   929 ;; This function is called by:
   930 ;;		_main
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           
   935                           ;psect for function _motorpasso_init
   936  0681                     _motorpasso_init:
   937  0681                     l741:	
   938                           ;incstack = 0
   939                           ; Regs used in _motorpasso_init: []
   940                           
   941                           
   942                           ;motorpasso.c: 8:     TRISDbits.TRISD7 = 0;
   943  0681  1683               	bsf	3,5	;RP0=1, select bank1
   944  0682  1303               	bcf	3,6	;RP1=0, select bank1
   945  0683  1388               	bcf	8,7	;volatile
   946                           
   947                           ;motorpasso.c: 9:     TRISDbits.TRISD6 = 0;
   948  0684  1308               	bcf	8,6	;volatile
   949                           
   950                           ;motorpasso.c: 10:     TRISDbits.TRISD5 = 0;
   951  0685  1288               	bcf	8,5	;volatile
   952                           
   953                           ;motorpasso.c: 11:     TRISDbits.TRISD4 = 0;
   954  0686  1208               	bcf	8,4	;volatile
   955                           
   956                           ;motorpasso.c: 12:     PORTDbits.RD7 =0;
   957  0687  1283               	bcf	3,5	;RP0=0, select bank0
   958  0688  1303               	bcf	3,6	;RP1=0, select bank0
   959  0689  1388               	bcf	8,7	;volatile
   960                           
   961                           ;motorpasso.c: 13:     PORTDbits.RD6 =0;
   962  068A  1308               	bcf	8,6	;volatile
   963                           
   964                           ;motorpasso.c: 14:     PORTDbits.RD5 =1;
   965  068B  1688               	bsf	8,5	;volatile
   966                           
   967                           ;motorpasso.c: 15:     PORTDbits.RD4 =0;
   968  068C  1208               	bcf	8,4	;volatile
   969  068D                     l51:
   970  068D  0008               	return
   971  068E                     __end_of_motorpasso_init:
   972                           
   973                           	psect	text2
   974  0723                     __ptext2:	
   975 ;; *************** function _motorpasso *****************
   976 ;; Defined at:
   977 ;;		line 34 in file "motorpasso.c"
   978 ;; Parameters:    Size  Location     Type
   979 ;;  numpassos       2    3[COMMON] int 
   980 ;;  t               2    5[COMMON] int 
   981 ;; Auto vars:     Size  Location     Type
   982 ;;		None
   983 ;; Return value:  Size  Location     Type
   984 ;;                  1    wreg      void 
   985 ;; Registers used:
   986 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   992 ;;      Params:         4       0       0       0       0
   993 ;;      Locals:         0       0       0       0       0
   994 ;;      Temps:          1       0       0       0       0
   995 ;;      Totals:         5       0       0       0       0
   996 ;;Total ram usage:        5 bytes
   997 ;; Hardware stack levels used:    1
   998 ;; Hardware stack levels required when called:    1
   999 ;; This function calls:
  1000 ;;		_delay
  1001 ;; This function is called by:
  1002 ;;		_main
  1003 ;; This function uses a non-reentrant model
  1004 ;;
  1005                           
  1006                           
  1007                           ;psect for function _motorpasso
  1008  0723                     _motorpasso:
  1009  0723                     l973:	
  1010                           ;incstack = 0
  1011                           ; Regs used in _motorpasso: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1012                           
  1013                           
  1014                           ;motorpasso.c: 34: void motorpasso (int numpassos, int t);motorpasso.c: 35: {;motorpasso
      +                          .c: 37:     for ( passoatual=0; passoatual<numpassos; passoatual++ )
  1015  0723  1283               	bcf	3,5	;RP0=0, select bank0
  1016  0724  1303               	bcf	3,6	;RP1=0, select bank0
  1017  0725  01B5               	clrf	_passoatual
  1018  0726  01B6               	clrf	_passoatual+1
  1019  0727  2F42               	goto	l981
  1020  0728                     l975:
  1021                           
  1022                           ;motorpasso.c: 38:     {;motorpasso.c: 39:         PORTD = passos[passoatual % 4];
  1023  0728  1283               	bcf	3,5	;RP0=0, select bank0
  1024  0729  1303               	bcf	3,6	;RP1=0, select bank0
  1025  072A  0835               	movf	_passoatual,w
  1026  072B  3903               	andlw	3
  1027  072C  3E2D               	addlw	(low (_passos| 0))& (0+255)
  1028  072D  0084               	movwf	4
  1029  072E  1383               	bcf	3,7	;select IRP bank0
  1030  072F  0800               	movf	0,w
  1031  0730  0088               	movwf	8	;volatile
  1032  0731                     l977:
  1033                           
  1034                           ;motorpasso.c: 40:         delay(t);
  1035  0731  0876               	movf	motorpasso@t+1,w
  1036  0732  00F1               	movwf	delay@t+1
  1037  0733  0875               	movf	motorpasso@t,w
  1038  0734  00F0               	movwf	delay@t
  1039  0735  120A  118A  26B2  120A  118A  	fcall	_delay
  1040  073A                     l979:
  1041                           
  1042                           ;motorpasso.c: 41:     }
  1043  073A  3001               	movlw	1
  1044  073B  1283               	bcf	3,5	;RP0=0, select bank0
  1045  073C  1303               	bcf	3,6	;RP1=0, select bank0
  1046  073D  07B5               	addwf	_passoatual,f
  1047  073E  1803               	skipnc
  1048  073F  0AB6               	incf	_passoatual+1,f
  1049  0740  3000               	movlw	0
  1050  0741  07B6               	addwf	_passoatual+1,f
  1051  0742                     l981:
  1052  0742  0836               	movf	_passoatual+1,w
  1053  0743  3A80               	xorlw	128
  1054  0744  00F7               	movwf	??_motorpasso
  1055  0745  0874               	movf	motorpasso@numpassos+1,w
  1056  0746  3A80               	xorlw	128
  1057  0747  0277               	subwf	??_motorpasso,w
  1058  0748  1D03               	skipz
  1059  0749  2F4C               	goto	u315
  1060  074A  0873               	movf	motorpasso@numpassos,w
  1061  074B  0235               	subwf	_passoatual,w
  1062  074C                     u315:
  1063  074C  1C03               	skipc
  1064  074D  2F4F               	goto	u311
  1065  074E  2F50               	goto	u310
  1066  074F                     u311:
  1067  074F  2F28               	goto	l975
  1068  0750                     u310:
  1069  0750                     l66:
  1070  0750  0008               	return
  1071  0751                     __end_of_motorpasso:
  1072                           
  1073                           	psect	text3
  1074  06F5                     __ptext3:	
  1075 ;; *************** function _motormeiopasso *****************
  1076 ;; Defined at:
  1077 ;;		line 63 in file "motorpasso.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;  numpaassos      2    3[COMMON] int 
  1080 ;;  t               2    5[COMMON] int 
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;		None
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  1    wreg      void 
  1085 ;; Registers used:
  1086 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1092 ;;      Params:         4       0       0       0       0
  1093 ;;      Locals:         0       0       0       0       0
  1094 ;;      Temps:          1       0       0       0       0
  1095 ;;      Totals:         5       0       0       0       0
  1096 ;;Total ram usage:        5 bytes
  1097 ;; Hardware stack levels used:    1
  1098 ;; Hardware stack levels required when called:    1
  1099 ;; This function calls:
  1100 ;;		_delay
  1101 ;; This function is called by:
  1102 ;;		_main
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106                           
  1107                           ;psect for function _motormeiopasso
  1108  06F5                     _motormeiopasso:
  1109  06F5                     l993:	
  1110                           ;incstack = 0
  1111                           ; Regs used in _motormeiopasso: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1112                           
  1113                           
  1114                           ;motorpasso.c: 63: void motormeiopasso (int numpaassos, int t);motorpasso.c: 64: {;motor
      +                          passo.c: 66:     for ( passoatuaal=0; passoatuaal<numpaassos; passoatuaal++ )
  1115  06F5  1283               	bcf	3,5	;RP0=0, select bank0
  1116  06F6  1303               	bcf	3,6	;RP1=0, select bank0
  1117  06F7  01B1               	clrf	_passoatuaal
  1118  06F8  01B2               	clrf	_passoatuaal+1
  1119  06F9  2F14               	goto	l1001
  1120  06FA                     l995:
  1121                           
  1122                           ;motorpasso.c: 67:     {;motorpasso.c: 68:         PORTD = passoos[passoatuaal % 8];
  1123  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  1124  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  1125  06FC  0831               	movf	_passoatuaal,w
  1126  06FD  3907               	andlw	7
  1127  06FE  3E20               	addlw	(low (_passoos| 0))& (0+255)
  1128  06FF  0084               	movwf	4
  1129  0700  1383               	bcf	3,7	;select IRP bank0
  1130  0701  0800               	movf	0,w
  1131  0702  0088               	movwf	8	;volatile
  1132  0703                     l997:
  1133                           
  1134                           ;motorpasso.c: 69:         delay(t);
  1135  0703  0876               	movf	motormeiopasso@t+1,w
  1136  0704  00F1               	movwf	delay@t+1
  1137  0705  0875               	movf	motormeiopasso@t,w
  1138  0706  00F0               	movwf	delay@t
  1139  0707  120A  118A  26B2  120A  118A  	fcall	_delay
  1140  070C                     l999:
  1141                           
  1142                           ;motorpasso.c: 70:     }
  1143  070C  3001               	movlw	1
  1144  070D  1283               	bcf	3,5	;RP0=0, select bank0
  1145  070E  1303               	bcf	3,6	;RP1=0, select bank0
  1146  070F  07B1               	addwf	_passoatuaal,f
  1147  0710  1803               	skipnc
  1148  0711  0AB2               	incf	_passoatuaal+1,f
  1149  0712  3000               	movlw	0
  1150  0713  07B2               	addwf	_passoatuaal+1,f
  1151  0714                     l1001:
  1152  0714  0832               	movf	_passoatuaal+1,w
  1153  0715  3A80               	xorlw	128
  1154  0716  00F7               	movwf	??_motormeiopasso
  1155  0717  0874               	movf	motormeiopasso@numpaassos+1,w
  1156  0718  3A80               	xorlw	128
  1157  0719  0277               	subwf	??_motormeiopasso,w
  1158  071A  1D03               	skipz
  1159  071B  2F1E               	goto	u335
  1160  071C  0873               	movf	motormeiopasso@numpaassos,w
  1161  071D  0231               	subwf	_passoatuaal,w
  1162  071E                     u335:
  1163  071E  1C03               	skipc
  1164  071F  2F21               	goto	u331
  1165  0720  2F22               	goto	u330
  1166  0721                     u331:
  1167  0721  2EFA               	goto	l995
  1168  0722                     u330:
  1169  0722                     l90:
  1170  0722  0008               	return
  1171  0723                     __end_of_motormeiopasso:
  1172                           
  1173                           	psect	text4
  1174  06C7                     __ptext4:	
  1175 ;; *************** function _motorantpasso *****************
  1176 ;; Defined at:
  1177 ;;		line 49 in file "motorpasso.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;  qtdpassos       2    3[COMMON] int 
  1180 ;;  t               2    5[COMMON] int 
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;		None
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  1    wreg      void 
  1185 ;; Registers used:
  1186 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1192 ;;      Params:         4       0       0       0       0
  1193 ;;      Locals:         0       0       0       0       0
  1194 ;;      Temps:          1       0       0       0       0
  1195 ;;      Totals:         5       0       0       0       0
  1196 ;;Total ram usage:        5 bytes
  1197 ;; Hardware stack levels used:    1
  1198 ;; Hardware stack levels required when called:    1
  1199 ;; This function calls:
  1200 ;;		_delay
  1201 ;; This function is called by:
  1202 ;;		_main
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           
  1207                           ;psect for function _motorantpasso
  1208  06C7                     _motorantpasso:
  1209  06C7                     l983:	
  1210                           ;incstack = 0
  1211                           ; Regs used in _motorantpasso: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1212                           
  1213                           
  1214                           ;motorpasso.c: 49: void motorantpasso (int qtdpassos, int t);motorpasso.c: 50: {;motorpa
      +                          sso.c: 52:     for ( passoagora=0; passoagora<qtdpassos; passoagora++ )
  1215  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  1216  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  1217  06C9  01B3               	clrf	_passoagora
  1218  06CA  01B4               	clrf	_passoagora+1
  1219  06CB  2EE6               	goto	l991
  1220  06CC                     l985:
  1221                           
  1222                           ;motorpasso.c: 53:     {;motorpasso.c: 54:         PORTD = passo[passoagora % 4];
  1223  06CC  1283               	bcf	3,5	;RP0=0, select bank0
  1224  06CD  1303               	bcf	3,6	;RP1=0, select bank0
  1225  06CE  0833               	movf	_passoagora,w
  1226  06CF  3903               	andlw	3
  1227  06D0  3E29               	addlw	(low (_passo| 0))& (0+255)
  1228  06D1  0084               	movwf	4
  1229  06D2  1383               	bcf	3,7	;select IRP bank0
  1230  06D3  0800               	movf	0,w
  1231  06D4  0088               	movwf	8	;volatile
  1232  06D5                     l987:
  1233                           
  1234                           ;motorpasso.c: 55:         delay(t);
  1235  06D5  0876               	movf	motorantpasso@t+1,w
  1236  06D6  00F1               	movwf	delay@t+1
  1237  06D7  0875               	movf	motorantpasso@t,w
  1238  06D8  00F0               	movwf	delay@t
  1239  06D9  120A  118A  26B2  120A  118A  	fcall	_delay
  1240  06DE                     l989:
  1241                           
  1242                           ;motorpasso.c: 56:     }
  1243  06DE  3001               	movlw	1
  1244  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  1245  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  1246  06E1  07B3               	addwf	_passoagora,f
  1247  06E2  1803               	skipnc
  1248  06E3  0AB4               	incf	_passoagora+1,f
  1249  06E4  3000               	movlw	0
  1250  06E5  07B4               	addwf	_passoagora+1,f
  1251  06E6                     l991:
  1252  06E6  0834               	movf	_passoagora+1,w
  1253  06E7  3A80               	xorlw	128
  1254  06E8  00F7               	movwf	??_motorantpasso
  1255  06E9  0874               	movf	motorantpasso@qtdpassos+1,w
  1256  06EA  3A80               	xorlw	128
  1257  06EB  0277               	subwf	??_motorantpasso,w
  1258  06EC  1D03               	skipz
  1259  06ED  2EF0               	goto	u325
  1260  06EE  0873               	movf	motorantpasso@qtdpassos,w
  1261  06EF  0233               	subwf	_passoagora,w
  1262  06F0                     u325:
  1263  06F0  1C03               	skipc
  1264  06F1  2EF3               	goto	u321
  1265  06F2  2EF4               	goto	u320
  1266  06F3                     u321:
  1267  06F3  2ECC               	goto	l985
  1268  06F4                     u320:
  1269  06F4                     l78:
  1270  06F4  0008               	return
  1271  06F5                     __end_of_motorantpasso:
  1272                           
  1273                           	psect	text5
  1274  06B2                     __ptext5:	
  1275 ;; *************** function _delay *****************
  1276 ;; Defined at:
  1277 ;;		line 4 in file "delay.c"
  1278 ;; Parameters:    Size  Location     Type
  1279 ;;  t               2    0[COMMON] unsigned int 
  1280 ;; Auto vars:     Size  Location     Type
  1281 ;;		None
  1282 ;; Return value:  Size  Location     Type
  1283 ;;                  1    wreg      void 
  1284 ;; Registers used:
  1285 ;;		wreg, status,2, status,0
  1286 ;; Tracked objects:
  1287 ;;		On entry : 0/0
  1288 ;;		On exit  : 0/0
  1289 ;;		Unchanged: 0/0
  1290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1291 ;;      Params:         2       0       0       0       0
  1292 ;;      Locals:         0       0       0       0       0
  1293 ;;      Temps:          1       0       0       0       0
  1294 ;;      Totals:         3       0       0       0       0
  1295 ;;Total ram usage:        3 bytes
  1296 ;; Hardware stack levels used:    1
  1297 ;; This function calls:
  1298 ;;		Nothing
  1299 ;; This function is called by:
  1300 ;;		_motorpasso
  1301 ;;		_motorantpasso
  1302 ;;		_motormeiopasso
  1303 ;; This function uses a non-reentrant model
  1304 ;;
  1305                           
  1306                           
  1307                           ;psect for function _delay
  1308  06B2                     _delay:
  1309  06B2                     l967:	
  1310                           ;incstack = 0
  1311                           ; Regs used in _delay: [wreg+status,2+status,0]
  1312                           
  1313                           
  1314                           ;delay.c: 4: void delay(unsigned int t );delay.c: 6: {;delay.c: 7:     while ( t )
  1315  06B2  2EC0               	goto	l971
  1316  06B3                     l969:
  1317                           
  1318                           ;delay.c: 8:     {;delay.c: 9:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1319  06B3  30C7               	movlw	199
  1320  06B4  00F2               	movwf	??_delay
  1321  06B5                     u407:
  1322  06B5  2EB6               	nop2
  1323  06B6  0BF2               	decfsz	??_delay,f
  1324  06B7  2EB5               	goto	u407
  1325  06B8  2EB9               	nop2
  1326  06B9  2EBA               	nop2
  1327                           
  1328                           ;delay.c: 10:         --t;
  1329  06BA  3001               	movlw	1
  1330  06BB  02F0               	subwf	delay@t,f
  1331  06BC  3000               	movlw	0
  1332  06BD  1C03               	skipc
  1333  06BE  03F1               	decf	delay@t+1,f
  1334  06BF  02F1               	subwf	delay@t+1,f
  1335  06C0                     l971:
  1336                           
  1337                           ;delay.c: 7:     while ( t )
  1338  06C0  0870               	movf	delay@t,w
  1339  06C1  0471               	iorwf	delay@t+1,w
  1340  06C2  1D03               	btfss	3,2
  1341  06C3  2EC5               	goto	u301
  1342  06C4  2EC6               	goto	u300
  1343  06C5                     u301:
  1344  06C5  2EB3               	goto	l969
  1345  06C6                     u300:
  1346  06C6                     l8:
  1347  06C6  0008               	return
  1348  06C7                     __end_of_delay:
  1349  007E                     btemp	set	126	;btemp
  1350  007E                     wtemp0	set	126
  1351                           
  1352                           	psect	config
  1353                           
  1354                           ;Config register CONFIG1 @ 0x2007
  1355                           ;	Oscillator Selection bits
  1356                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1357                           ;	Watchdog Timer Enable bit
  1358                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1359                           ;	Power-up Timer Enable bit
  1360                           ;	PWRTE = OFF, PWRT disabled
  1361                           ;	RE3/MCLR pin function select bit
  1362                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1363                           ;	Code Protection bit
  1364                           ;	CP = OFF, Program memory code protection is disabled
  1365                           ;	Data Code Protection bit
  1366                           ;	CPD = OFF, Data memory code protection is disabled
  1367                           ;	Brown Out Reset Selection bits
  1368                           ;	BOREN = OFF, BOR disabled
  1369                           ;	Internal External Switchover bit
  1370                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1371                           ;	Fail-Safe Clock Monitor Enabled bit
  1372                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1373                           ;	Low Voltage Programming Enable bit
  1374                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1375                           ;	In-Circuit Debugger Mode bit
  1376                           ;	DEBUG = 0x1, unprogrammed default
  1377  2007                     	org	8199
  1378  2007  20D4               	dw	8404
  1379                           
  1380                           ;Config register CONFIG2 @ 0x2008
  1381                           ;	Brown-out Reset Selection bit
  1382                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1383                           ;	Flash Program Memory Self Write Enable bits
  1384                           ;	WRT = OFF, Write protection off
  1385  2008                     	org	8200
  1386  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      13
    BANK0            80      0      23
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_motorantpasso
    _main->_motormeiopasso
    _main->_motorpasso
    _motorpasso->_delay
    _motormeiopasso->_delay
    _motorantpasso->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1371
                                              8 COMMON     2     2      0
                      _motorantpasso
                     _motormeiopasso
                         _motorpasso
                    _motorpasso_init
 ---------------------------------------------------------------------------------
 (1) _motorpasso_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorpasso                                           5     1      4     447
                                              3 COMMON     5     1      4
                              _delay
 ---------------------------------------------------------------------------------
 (1) _motormeiopasso                                       5     1      4     447
                                              3 COMMON     5     1      4
                              _delay
 ---------------------------------------------------------------------------------
 (1) _motorantpasso                                        5     1      4     447
                                              3 COMMON     5     1      4
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                3     1      2     251
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _motorantpasso
     _delay
   _motormeiopasso
     _delay
   _motorpasso
     _delay
   _motorpasso_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      17       5       28.7%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      24      12        0.0%
ABS                  0      0      24       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Jun 13 18:50:42 2021

                       l8 06C6                         pc 0002                        l24 07BA  
                      l51 068D                        l35 07A5                        l27 075E  
                      l90 0722                        l66 0750                        l78 06F4  
                      fsr 0004           ??_motorantpasso 0077                       l741 0681  
                     l971 06C0                       l981 0742                       l973 0723  
                     l967 06B2                       l991 06E6                       l983 06C7  
                     l975 0728                       l969 06B3                       l985 06CC  
                     l993 06F5                       l977 0731                       l987 06D5  
                     l995 06FA                       l979 073A                       l989 06DE  
                     l997 0703                       l999 070C                       u300 06C6  
                     u301 06C5                       u310 0750                       u311 074F  
                     u320 06F4                       u321 06F3                       u330 0722  
                     u331 0721                       u315 074C                       u340 0764  
                     u325 06F0                       u341 0763                       u350 076C  
                     u407 06B5                       u335 071E                       u351 076B  
                     u360 0774                       u361 0773                       u370 078C  
                     u371 078B                       u380 07A4                       u381 07A3  
                     u390 07AB                       u391 07AA                       fsr0 0004  
                     indf 0000                      l1001 0714                      l1011 0768  
                    l1003 0751                      l1021 0786                      l1013 076C  
                    l1005 0753                      l1023 078C                      l1015 0770  
                    l1007 0759                      l1033 07AC                      l1025 0791  
                    l1017 0774                      l1009 0764                      l1027 079E  
                    l1019 0779                      l1037 07BA                      l1075 07BF  
                    _main 0751                      btemp 007E          ??_motormeiopasso 0077  
                    start 0000                     ?_main 0070                     _PORTD 0008  
                   _delay 06B2                     _passo 0029                     pclath 000A  
                   status 0003                     wtemp0 007E    motorantpasso@qtdpassos 0073  
         __initialization 07D6              __end_of_main 07D6         ??_motorpasso_init 0070  
                  ??_main 0078                    ?_delay 0070                    delay@t 0070  
                  _passos 002D              __pdataCOMMON 007A   __end_of__initialization 07FC  
          __pcstackCOMMON 0070              __pidataBANK0 068E             __end_of_delay 06C7  
                 ??_delay 0072                __pbssBANK0 0031                __pmaintext 0751  
   __end_of_motorantpasso 06F5                   _LCDbits 0008           _motorpasso_init 0681  
                 __ptext1 0681                   __ptext2 0723                   __ptext3 06F5  
                 __ptext4 06C7                   __ptext5 06B2                   _passoos 0020  
    end_of_initialization 07FC                _passoagora 0033                _passoatual 0035  
              _motorpasso 0723   __size_of_motormeiopasso 002E                 _PORTDbits 0008  
             motorpasso@t 0075                _numpaassos 007A                 _TRISBbits 0086  
               _TRISDbits 0088   __end_of_motorpasso_init 068E                main@estado 0078  
           __pidataCOMMON 067E       start_initialization 07D6       motorpasso@numpassos 0073  
              init_fetch0 069F               __pdataBANK0 0020               ?_motorpasso 0073  
               ___latbits 0002          ?_motorpasso_init 0070            _motormeiopasso 06F5  
          __size_of_delay 0015       __size_of_motorpasso 002E    __size_of_motorantpasso 002E  
  __end_of_motormeiopasso 0723                 _numpassos 007C                 _qtdpassos 007B  
         motormeiopasso@t 0075           ?_motormeiopasso 0073             _motorantpasso 06C7  
           __size_of_main 0085            motorantpasso@t 0075              ??_motorpasso 0077  
             _passoatuaal 0031            ?_motorantpasso 0073  motormeiopasso@numpaassos 0073  
                init_ram0 06A3        __end_of_motorpasso 0751  __size_of_motorpasso_init 000D  
